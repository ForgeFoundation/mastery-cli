
const network_final = [
    {
        term: "wireshark-protocol",
        prompt: "What is wireshark used for?",
        description: "Wireshark is a widely used network protocol analyzer or packet sniffer. It is an open-source software tool that allows users to capture and analyze network traffic in real-time. Wireshark can be used for various purposes, including:\n\
        Network Troubleshooting: It helps in diagnosing and resolving network issues by capturing and examining packets to identify errors, latency problems, misconfigurations, or faulty network devices.\n\
        Network Security: Wireshark can be used to analyze network traffic for security purposes, such as detecting and investigating suspicious activities, identifying network attacks (e.g., malware infections, intrusion attempts), and monitoring for unauthorized access or data breaches"
    },
    {
        term: "switches-hubs",
        prompt: "What is the difference between switches and hubs?",
        description: "Switches and hubs are both networking devices used to connect multiple devices in a local area network (LAN), but they operate in different ways and have distinct features. Here are the key differences between switches and hubs:\n\
        Method of Operation: Hub: A hub operates in a simple and passive manner. When a device sends data to the hub, it broadcasts that data to all other devices connected to the hub. All devices on the hub receive the data, regardless of whether they are the intended recipients. \n\
        Switch: A switch, on the other hand, operates in a more intelligent and active manner. It examines the destination address of each incoming data packet and forwards it only to the specific device connected to the switch that should receive the data. It maintains a table (MAC address table) to track the network devices and their corresponding ports. Traffic Handling: Hub: Since a hub broadcasts data to all connected devices, \n\
        it generates more network traffic. This traffic is called a collision domain, where collisions can occur when multiple devices transmit data simultaneously, resulting in reduced network efficiency. Switch: A switch isolates each connected device into its own collision domain. By selectively forwarding packets to the intended destination, it reduces unnecessary traffic and improves network performance. Switches also support full-duplex communication, allowing simultaneous data transmission in both directions."
    },
    {
        term: "switches-router",
        prompt: "What is the difference between switches and routers?",
        description: "Switches operate at the Data Link Layer, connecting devices within a local network based on MAC addresses. Routers operate at the Network Layer, connecting different networks based on IP addresses, facilitating inter-network communication. Switches forward packets within a network segment, while routers route packets between networks. Switches focus on MAC addresses, while routers use IP addresses. Switches are used within LANs, while routers connect networks and provide additional services like routing protocols, NAT, firewalling, QoS, and VPN support."
    },
    {
        term: "subnet-task",
        prompt: "What is subnet mask?",
        description: "he subnet mask is applied by performing a bitwise logical AND operation between the IP address and the subnet mask. This operation results in the network address, which identifies the specific subnet to which the IP address belongs. The subnet mask consists of a series of consecutive 1s followed by a series of consecutive 0s. The 1s indicate the network bits, while the 0s indicate the host bits. The number of leading 1s in the subnet mask determines the size of the network portion. For description, a common subnet mask is 255.255.255.0, which is written in decimal format. In binary, it is represented as 11111111.11111111.11111111.00000000. This subnet mask is associated with a Class C IP address and allows for 254 host addresses within a network. By applying subnet masks, network administrators can effectively partition a large network into smaller, more manageable subnets, helping with network organization, addressing, and routing. It enables efficient use of IP addresses and allows for better control and segmentation of network traffic.",
        description: "The subnet mask splits the IP address into the host and network addresses, thereby defining which part of the IP address belongs to the device and which part belongs to the network."
    },
    {
        term: "nfs-usage",
        prompt: "What is NFS used for?",
        description: "NFS stands for Network File System, and it is a distributed file system protocol. NFS allows a computer to access files and directories over a network as if they were located on the local storage of the computer. \n\
        It enables remote file sharing and facilitates network-based file access and management. NFS is commonly used in networked environments,\n\
        particularly in UNIX-like systems, to share files and resources among multiple computers or clients.\n\
        Here are some key use cases and benefits of NFS:",
        description: "The Network File System (NFS) is a mechanism for storing files on a network. It is a distributed file system that allows users to access files and directories located on remote computers and treat those files and directories as if they were local."
    },
    {
        term: "product-manager-share-folders",
        prompt: "You are a Product Manager and you want to share a certain folder, called ProjectX, with your team members with whom you share a defined user group on a UNIX system. These files are management-level sensitive documents that the entire group needs to work on the project. As such, you want to share them in such a way that the group has read-only access to the files, and everyone else has no access. Using the numeric representation of permissions, write a command that will allow you to perform this operation on the ProjectX directory that resides in /org/projects/ProjectX",
        description: "chmod 750 /org/projects/ProjectX"
    },
    {
        term: "network-layers",
        prompt: "Describe the 7 (or 5 in the book) network layers.",
        description: "1. Physical Layer: This layer represents the actual physical transmission of data over the network. It deals with the physical components such as cables, connectors, and the electrical signals used for communication.\n2. Data Link Layer: The data link layer provides reliable and error-free communication between two directly connected nodes on the network. It breaks data into frames, performs error detection and correction, and manages flow control.\n3. Network Layer: The network layer is responsible for logical addressing and routing of data across multiple networks. It determines the optimal path for data transmission and ensures data reaches its destination by selecting appropriate routes and managing congestion.\n4. Transport Layer: The transport layer facilitates end-to-end communication between the source and destination hosts. It ensures reliable and error-free data transfer by segmenting data into smaller units (segments) and handling retransmissions, flow control, and error recovery.\n5. Session Layer: The session layer establishes, manages, and terminates communication sessions between applications. It enables synchronization, checkpointing, and recovery of data exchange, allowing for seamless communication between different processes or applications.\n6. Presentation Layer: The presentation layer is responsible for data representation, encryption, compression, and protocol conversion. It ensures that data sent by the application layer is in a format that can be understood by the receiving system.\n7. Application Layer: The application layer is the closest layer to the end-user and interacts directly with applications. It provides services and protocols that enable user applications to access network resources. descriptions include HTTP for web browsing, FTP for file transfer, and SMTP for email."
    },
    {
        term: "advantages-of-sudo",
        prompt: "What are 3 of the advantages of using the sudo command?",
        description: "1. Privilege Separation: The sudo command allows administrators to grant specific privileges to regular users on an as-needed basis. Instead of logging in as the superuser (root) all the time, users can execute privileged commands using sudo and their own account credentials. This practice helps enforce the principle of least privilege by minimizing the risk of accidental or malicious system changes.\n2. Auditing and Accountability: sudo provides an audit trail of user actions. By using sudo to execute commands, administrators can track and log the activities of individual users, including the commands they run and when they run them. This logging capability enhances accountability and simplifies the troubleshooting process by allowing administrators to trace the source of system changes or investigate potential security incidents.\n3. Fine-Grained Access Control: With sudo, administrators can finely control which commands and resources users can access with elevated privileges. Access permissions can be configured at a granular level, specifying which commands are allowed or denied for specific users or groups. This flexibility allows administrators to restrict access to critical commands or sensitive files, reducing the risk of unauthorized modifications or malicious activities."
    },
    {
        term: "reasons-to-use-full-path",
        prompt: "Why is it a good idea to put some partitions (such as /var, /home, and swap) on a separate drive from other data files and programs? What about /tmp? Give specific reasons for each of the filesystems listed.",
        description: "1. /var: The /var directory contains variable data, including log files, spool files, cached data, and databases. By placing /var on a separate drive, you can isolate it from other filesystems to prevent issues caused by disk space limitations. For description, if logs or databases grow significantly, they won't affect the availability of other partitions or programs. Additionally, separating /var can improve system performance since frequent write operations to log files or databases won't compete with other data on the same drive.\n2. /home: The /home directory typically stores user home directories and personal data. By having /home on a separate drive, you can simplify backups and facilitate easier system upgrades or reinstallation. If you need to reinstall the operating system or change the root filesystem, the user data stored in /home can remain intact, ensuring minimal disruption to users and preserving their personal files and settings.\n3. swap: The swap partition or swap file provides virtual memory space that the operating system uses when physical memory (RAM) becomes full. Placing swap on a separate drive can improve system performance since swap activity won't compete for disk resources with other data or programs. It also allows for dedicated swap space management and monitoring.\n4. /tmp: The /tmp directory is used for temporary files created by various applications. By putting /tmp on a separate drive, you can enhance security and stability. Isolating /tmp prevents potential issues caused by runaway processes, denial-of-service attacks, or malicious software filling up the root filesystem, which could lead to system instability or unavailability. Additionally, separate /tmp can improve system performance by avoiding contention with other disk-intensive operations.\n\nSeparating these partitions onto different drives or filesystems offers benefits such as improved performance, data isolation, better system stability, simplified management, and enhanced security. It allows you to optimize resource allocation, minimize the impact of certain activities or failures on other components, and streamline administrative tasks related to backup, upgrade, or recovery."
    },
    {
        term: "use-full-path-as-root",
        prompt: "When logged in as root, why is it important to use the full path of programs you run?",
        description: "1. Security: The root user has elevated privileges and can execute any command on the system. By using the full path of a program, you ensure that you are running the intended program and not a malicious or unauthorized version that may exist in a different location. It reduces the risk of inadvertently executing a program with the same name but located elsewhere in the system, such as a user's home directory or a compromised location.\n2. Environment Variability: You eliminate ambiguity and ensure that the desired program is executed regardless of the environment variables or settings.\n3. Script Execution: When writing scripts or automation tasks that are intended to run as the root user, using the full path of programs becomes even more critical. Scripts may be scheduled to run at specific times or by other processes, and the environment variables may differ from when the script is executed manually. By explicitly specifying the full path, you ensure that the script executes with the correct program, regardless of the context in which it runs.\n4. Script Portability: Using the full path of programs in scripts enhances their portability across different systems. Different systems may have variations in the default installation paths or may not have the same programs installed in the same locations. By specifying the full path, you ensure that the script can be executed on different systems without relying on specific assumptions about the system's environment."
    },
    {
        term: "components-of-url",
        prompt: "What are the components of a URL address?",
        description: "1. Protocol: The protocol specifies the communication method to be used when accessing the resource.\n2. Domain or Host: The domain or host component identifies the specific server or network location where the resource is hosted.\n3. Port: The port number represents a specific endpoint or service on the server.\n4. Path: The path refers to the specific file or resource location on the server.\n5. Query Parameters: Query parameters are optional parameters appended to the URL after a question mark.\n6. Fragment Identifier: The fragment identifier appears after a hash symbol in the URL."
    },
    {
        term: "port-address-in-url",
        prompt: "Why isn't the port address of the service requested normally not included in the URL?",
        description: "1. Default Ports: Many internet protocols have well-known default ports assigned to them. Since these default ports are widely known and understood, they do not need to be explicitly specified in the URL.\n2. Simplicity: Including the port in the URL can make it longer and more complex, especially for services that use non-standard ports. Omitting the port from the URL allows for a cleaner and more user-friendly presentation of the web address.\n3. Automatic Handling: Most web browsers and network clients are programmed to handle the default ports automatically. This simplifies the user experience and reduces the need for users to remember or manually enter the port number for common protocols."
    },
    {
        term: "components-of-email-system",
        prompt: "Explain the four components of the email system.",
        description: "1. User Agents (Email Clients): User agents, commonly known as email clients, are software applications or web interfaces that allow users to create, send, receive, and manage email messages.\n2. Mail Transfer Agent (MTA): The Mail Transfer Agent is responsible for the transfer and routing of email messages between mail servers.\n3. Mail Delivery Agent (MDA): The Mail Delivery Agent handles the delivery of incoming email messages to the recipient's mailbox.\n4. Message Access Agent/Server: The Message Access Agent/Server is responsible for providing access to email messages stored on a mail server."
    },
    {
        term: "unix-linux-email-programs",
        prompt: "What programs might a typical email message pass through as one Unix/Linux user emails another, and what do they do?",
        description: "1. Mail User Agent (MUA): This is the program used to compose, read, and send emails.\n2. Mail Transfer Agent (MTA): The MTA sends the email to the recipient's MTA using the Simple Mail Transfer Protocol (SMTP).\n3. Mail Delivery Agent (MDA): The MDA takes the email from the recipient's MTA and places it into the recipient's mailbox.\n4. Mail Retrieval Agents/Protocols: Depending on the email client's setup, it may use protocols like POP or IMAP to retrieve email from the mailbox.\n5. Spam Filters: Programs like SpamAssassin analyze incoming email and filter out unwanted spam.\n6. Security and Encryption tools: Programs like OpenSSL and GnuPG may be used for secure, encrypted email communication."
    },
    {
        term: "top-level-domains-us",
        prompt: "Name at least 4 Top-Level Domains in the U.S. and what they are used for.",
        description: "1. .com (Commercial): The .com TLD is one of the most common and widely used TLDs. It is intended for commercial entities and is often used by businesses, e-commerce websites, and other commercial ventures.\n2. .org (Organization): The .org TLD is traditionally associated with non-profit organizations, foundations, and community groups. It is commonly used by organizations that are not primarily profit-driven, such as non-profits, charities, and open-source projects.\n3. .edu (Education): The .edu TLD is reserved for accredited educational institutions, such as universities, colleges, and educational organizations. It is used to distinguish educational resources and institutions from other types of websites.\n4. .gov (Government): The .gov TLD is exclusively reserved for government entities at the federal, state, and local levels in the United States. Websites with a .gov domain indicate official government websites and online services."
    },
    {
        term: "zone-file-records",
        prompt: "Name at least 3 types of records found in a zone file and what they are for.",
        description: "1. A (Address) Record: An A record associates a domain name with an IPv4 address. It maps a domain (e.g., description.com) to the corresponding IP address (e.g., 192.0.2.1). A records are used to point domain names to specific servers or machines on the internet.\n2. MX (Mail Exchange) Record: An MX record identifies the mail servers responsible for accepting email messages for a domain. It specifies the priority and hostname of the mail servers that should receive incoming emails. MX records enable the proper routing of email to the correct mail servers associated with a domain.\n3. CNAME (Canonical Name) Record: A CNAME record provides an alias or canonical name for a domain. It associates a domain or subdomain with another domain name. CNAME records are often used to create subdomains or to point multiple domains to a single canonical domain."
    },
    {
        term: "nfs-root-squash",
        prompt: "With NFS, what is typically used to prevent users with root access on a client from gaining access to any file?",
        description: "In NFS (Network File System), to prevent users with root access on a client from gaining access to any file on the NFS server, a common approach is to use the 'root squash' feature. Root squash is a security mechanism implemented on the NFS server that maps requests from the root user on the client to a non-privileged user on the server."
    },
    {
        term: "fbi-agent-access-protocol",
        prompt: "If an FBI agent shows up at your office claiming he needs access to private information pertaining to an employee at your company, what is the very first action that you should take?",
        description: "1. Request Identification: Politely ask the agent to provide official identification, such as an FBI badge or credentials. Take note of their name, badge number, and agency affiliation.\n2. Contact Your Legal Department: Inform your legal department or the appropriate authority within your organization immediately. Share the details of the situation and seek guidance on how to proceed.\n3. Validate the Request: Your legal department should initiate direct contact with the FBI to verify the agent's identity, the purpose of their request, and the legal basis for accessing the information."
    },
    {
        term: "backup-services-contract-details",
        prompt: "Suppose you are being hired to provide backup services for a third party. What are the important details that need to be included in the contract? (State 2)",
        description: "1. Scope of Services: Define the scope of backup services to be provided, specifying the data, systems, and technologies covered under the agreement.\n2. Service Level Agreement (SLA): Include a comprehensive SLA that outlines the performance standards, uptime guarantees, response times for support requests, and any penalties or compensations for service-level breaches."
    },
    {
        term: "importance-of-backups",
        prompt: "List two reasons why backups are essential.",
        description: "1. Data Loss Protection: Backups serve as a safeguard against data loss.\n2. Disaster Recovery and Business Continuity: Backups play a vital role in disaster recovery and business continuity planning."
    },
    {
        term: "scheduling-maintenance-factors",
        prompt: "What are some important factors to consider when scheduling maintenance?",
        description: "1. Impact on Operations: Consider the potential impact of maintenance activities on normal operations. Schedule maintenance during periods of low user activity or non-peak hours to minimize disruption.\n2. Service Level Agreements (SLAs): Take into account any SLAs or contractual obligations that specify maintenance windows or response times.\n3. Communication and Notification: Plan for effective communication with stakeholders to inform them of scheduled maintenance, including the duration, expected impact, and any alternative arrangements.\n4. Criticality and Priority: Prioritize maintenance tasks based on their criticality and potential impact on system availability, security, or performance.\n5. Resource Availability: Ensure that necessary resources, including personnel, tools, and equipment, are available for performing the maintenance tasks.\n6. Testing and Validation: Allocate sufficient time for testing, validation, and rollback procedures to ensure that systems are properly functioning after maintenance.\n7. Documentation and Record-Keeping: Maintain thorough documentation of maintenance activities, including procedures, changes made, and any issues encountered."
    },
    {
        term: "dns-method-load-balance-web-server",
        prompt: "What DNS method can be used to load balance a web server?",
        description: "The DNS method that can be used to load balance a web server is called 'Round Robin DNS' or 'DNS load balancing.' Round Robin DNS involves configuring the DNS server to respond to DNS queries for a specific domain with multiple IP addresses, each corresponding to a different web server hosting the same content."
    },
    {
        term: "difference-between-tcp-and-udp",
        prompt: "What is the difference between TCP and UDP, and explain where one might be more appropriate than the other?",
        description: "1. Reliability:\n- TCP: TCP provides reliable and ordered delivery of data. It guarantees that data is received without errors, retransmits lost packets, and ensures data integrity through error checking and acknowledgment mechanisms.\n- UDP: UDP is a connectionless protocol that does not guarantee reliable delivery or ordering of packets. It is a best-effort protocol that delivers packets without error checking or retransmission.\n2. Connection-Oriented vs. Connectionless:\n- TCP: TCP is a connection-oriented protocol. Before data transfer, TCP establishes a reliable and ordered connection between the sender and receiver. It performs handshaking, manages acknowledgments, and ensures data delivery in the correct sequence.\n- UDP: UDP is a connectionless protocol, which means it does not establish a dedicated connection before transmitting data. Each packet is treated as an independent entity and can be sent to the destination without prior communication or setup.\n3. Efficiency and Overhead:\n- TCP: Due to its reliability mechanisms and connection-oriented nature, TCP incurs additional overhead in terms of packet acknowledgments, retransmissions, and flow control. This overhead can introduce higher latency and consume more network resources.\n- UDP: UDP has minimal overhead compared to TCP since it lacks built-in reliability and connection management mechanisms.\n4. Use Cases:\n- TCP: TCP is commonly used for applications that require reliable data transfer and in-order delivery, such as web browsing, file transfers (FTP), email (SMTP, IMAP), remote login (SSH), and transactional protocols (HTTP, HTTPS).\n- UDP: UDP is suitable for applications that prioritize speed, efficiency, and real-time communication over reliability, such as real-time streaming, VoIP, online gaming, DNS lookups, and IoT applications."
    },
    {
        term: "security-problems-with-nfs",
        prompt: "What are some of the security problems associated with NFS (4) and how can these issues be avoided? (5)",
        description: "1. Lack of Authentication and Encryption: By default, NFS traditionally lacked strong authentication and encryption mechanisms. This makes it vulnerable to eavesdropping, unauthorized access, and data tampering during network transmission. Without proper authentication and encryption, sensitive data transferred over NFS can be intercepted or manipulated by attackers.\n2. Weak Access Control: NFS relies on host-based access control, known as the \"host- based security model.\" \n\
        This model uses the client's IP address to determine access permissions, which can be easily spoofed or manipulated. It lacks granularity and does not provide strong access control mechanisms based on user identities or groups.\n\
        3. Insecure Mounting: Improper NFS mounting configurations can lead to security vulnerabilities. For description, using the \"no_root_squash\" option allows the root user on the client to have unrestricted access to files on the NFS server, which can be a significant security risk.\n4. Network Exposure: NFS operates over the network, making it susceptible to network-based attacks, such as sniffing, IP spoofing, or man-in-the-middle attacks. If the network infrastructure is not adequately protected, NFS traffic can be intercepted or manipulated by attackers.\n\n1. Use NFSv4: NFSv4 offers improved security features, including stronger authentication mechanisms and support for encryption. Upgrading to NFSv4 enhances \n\
        data security and protects against unauthorized access and tampering.\n2. Implement Strong Authentication: Use secure authentication mechanisms, such as Kerberos, for NFS. Kerberos provides strong mutual authentication and helps prevent unauthorized access to NFS resources.\n3. Enable Encryption: Enable encryption for NFS traffic using technologies such as IPsec or VPN tunnels. Encryption ensures the confidentiality and integrity of data transmitted over the network.\n4. Implement Network Segmentation: Separate NFS traffic onto dedicated, secure network segments, isolating it from potentially compromised or untrusted networks. Network segmentation helps protect NFS communications and prevents unauthorized access.\n5. Use Secure Mount Options: Implement secure NFS mounting options, such as the \"root_squash\"\
         option, which maps requests from the root user on the client to a non-privileged user on the server. This prevents the root user on the client from gaining unrestricted access to NFS files.\n6. Implement Firewall Rules: Configure firewalls to restrict access to NFS services only from trusted hosts or subnets. Limiting access to NFS services minimizes the exposure to potential attacks.\n7. Regularly Update and Patch: Keep NFS servers and clients up to date with the latest security patches and updates to address any known vulnerabilities.\n8. Implement Network Security Measures: Implement network security measures, such as intrusion detection and prevention systems (IDPS), network monitoring, and secure network configurations, to detect and mitigate any network-based attacks targeting NFS."
    },
    {
        term: "disable-root-access-ssh",
        prompt: "Why is it best to disable root access for SSH login?",
        description: "1. Mitigating Brute Force Attacks: By disabling root access, you make it more difficult for attackers to launch brute force attacks against the root account. Attackers commonly target the root account because it has full administrative privileges. Disabling root login forces attackers to guess both a valid username and password combination, making it harder for them to gain unauthorized access.\n2. Reducing Attack Surface: Disabling root access minimizes the attack surface exposed to potential vulnerabilities. The root account has extensive privileges and can perform critical operations, making it a prime target for exploitation. By disabling direct root login, you limit the potential impact of a successful attack by forcing attackers to compromise a non-root user account first.\n3. Enforcing Principle of Least Privilege: The principle of least privilege dictates that users should only have the privileges necessary to perform their tasks. Granting root access over SSH to users provides excessive privileges that can lead to accidental or intentional misuse. Disabling root login encourages users to log in with their individual accounts, allowing administrators to audit and control their access permissions."
    },
    {
        term: "ssh-vs-telnet",
        prompt: "Why is it better to use SSH instead of Telnet to remotely login to your system?",
        description: "1. Encryption: SSH encrypts all communication between the client and server, including login credentials and transmitted data. This prevents eavesdropping and protects sensitive information from being intercepted. Telnet, on the other hand, sends data in plain text, making it vulnerable to sniffing attacks where attackers can capture and view login credentials and other sensitive data.\n2. Authentication: SSH supports a variety of authentication methods, including public-key authentication, certificates, and password-based authentication. This allows for stronger and more secure authentication mechanisms compared to Telnet's simple username/password authentication. SSH provides an additional layer of security, particularly when using public-key authentication, which can offer stronger resistance against brute force attacks.\n3. Integrity Checks: SSH uses cryptographic integrity checks to ensure that data sent between the client and server has not been modified during transmission. This protects against tampering and data manipulation. Telnet does not provide any built-in integrity checks, making it susceptible to unauthorized modification of data by attackers.\n4. Secure File Transfer: SSH includes secure file transfer capabilities through utilities like SCP (Secure Copy) and SFTP (SSH File Transfer Protocol). These protocols allow for secure file transfers between systems, ensuring the confidentiality and integrity of transferred files. Telnet does not provide built-in secure file transfer mechanisms."
    },
    {
        term: "kill-9-pid",
        prompt: "What does kill -9 pid do?",
        description: "kill -9 pid: The 9 signal, also known as SIGKILL, is a special signal that terminates a process immediately without allowing it to perform any cleanup operations. When you send the SIGKILL signal to a process using kill -9, it forces the process to terminate abruptly. The process does not have the chance to handle or ignore the signal and is forcefully terminated. This signal should be used as a last resort when a process is unresponsive or cannot be terminated by other means."
    },
    {
        term: "kill-1-pid",
        prompt: "What does kill -1 pid do?",
        description: "kill -1 pid: The 1 signal, also known as SIGHUP (Hangup), is commonly used to instruct a process to reload its configuration or reinitialize itself. When you send the SIGHUP signal to a process using kill -1, the process receives the signal and typically responds by re-reading its configuration files or restarting its operation, depending on the application. This signal is often used to trigger a graceful restart of a daemon or to refresh its state."
    },
    {
        term: "a-vs-cname",
        prompt: "What is the difference between A and CNAME records in DNS?",
        description: "1. A (Address) Record: An A record maps a domain name to an IPv4 address. It associates a specific hostname (e.g., www.description.com) with an IPv4 address (e.g., 192.0.2.1). A records are used to point a domain or subdomain directly to the IP address of a specific server or host. Each A record corresponds to a single IPv4 address.\n\n2. CNAME (Canonical Name) Record: A CNAME record creates an alias or canonical name for a domain or subdomain. It associates a hostname with another domain or subdomain name. Instead of specifying an IP address directly, a CNAME record points to the canonical name of another record. When resolving a hostname with a CNAME record, the DNS resolver follows the alias and looks up the associated record to obtain the corresponding IP address."
    },
    {
        term: "/etc/resolv.conf",
        prompt: "What goes in /etc/resolv.conf?",
        description: "The /etc/resolv.conf file typically contains the following information:\n\n1. nameserver: Specifies the IP addresses of the DNS servers to be used for name resolution. Multiple nameserver lines can be added to specify multiple DNS servers.\n2. domain: Specifies the default domain name to be appended to a hostname when resolving it.\n3. search: Specifies a list of domain names to be tried when resolving a hostname.\n4. options: Allows the configuration of additional resolver options, such as the timeout value for DNS queries or the behavior of the resolver library."
    },

    {
        term: "http-https-ports",
        prompt: "What ports are HTTP and HTTPS accessed on?",
        description: "By default, HTTP is accessed on port 80, while HTTPS is accessed on port 443."
    },
    {
        term: "web-page-error-check",
        prompt: "Where would you check to see an error about a web page on your web server? (Apache, Php, cms)",
        description: "1. Web Server Logs: Web servers maintain log files that record various activities and errors. The specific location and naming conventions of these log files depend on the web server software being used. Common web server log files include:\n - Apache HTTP Server: Error logs can be found in files such as /var/log/apache2/error.log or /var/log/httpd/error_log.\n - Nginx: Error logs can be found in files like /var/log/nginx/error.log or /var/log/nginx/error_log.\n2. Application-specific Logs: If the error is related to a specific web application or framework running on the web server, the application may generate its own logs. These logs can provide insights into application-specific errors and issues. The location and naming conventions of these logs vary depending on the application and its configuration.\n3. PHP Error Logs: If your web server is running PHP, you can check PHP error logs to identify any errors or warnings specific to PHP scripts. The location of PHP error logs depends on the PHP configuration, and it can typically be found in a file specified by the error_log directive in the PHP configuration file (php.ini). Common locations include /var/log/php/error.log or /var/log/httpd/php_errors.log.\n4. Content Management System (CMS) Logs: If you are using a CMS like WordPress, Joomla, or Drupal, these systems often have their own logging mechanisms. The CMS logs can provide insights into errors specific to the CMS installation, plugins, or themes being used."
    },
    {
        term: "SELinux",
        prompt: "What is the purpose of SELinux?",
        description: "1. Enhanced Access Control: The most significant purpose of SELinux is to implement advanced access control mechanisms above and beyond what is provided by the standard Linux system. This includes Mandatory Access Control (MAC), which allows access control policies to be defined centrally and enforced consistently across the system.\n2. Confine Program Capabilities: SELinux can be used to confine the abilities of a program to the bare minimum it requires to function correctly. This means that even if an attacker manages to exploit a vulnerable program, they would have limited ability to cause harm, because the program itself has limited capabilities.\n3. Protect User Data: By using a policy that segregates user data from system data and from other users' data, SELinux can help to protect sensitive information from unauthorized access.\n4. Prevent Privilege Escalation: SELinux policies can be designed to prevent a process from gaining more privileges than it was initially granted, helping to prevent attacks that rely on privilege escalation.\n5. Logging and Audit Capabilities: SELinux can provide detailed logs and audit trails about security-related events, which can be used to identify attempted attacks, conduct forensic investigations, and ensure compliance with security policies.\n6. Security Policy Enforcement: Through its policy enforcement mechanism, SELinux ensures that the security policies defined by the system administrator or security officer are strictly enforced by the kernel."
    },
    {
        term: "firewall",
        prompt: "Why use a firewall?",
        description: "1. Protection Against Unauthorized Access: Firewalls help to prevent unauthorized access to your network from external sources. This includes hackers, bots, and malicious programs trying to access your network.\n2. Controlled Network Traffic: Firewalls control the flow of traffic to and from your network based on predefined rules, allowing you to determine which types of traffic are allowed and which are not.\n3. Block Malicious Software: Firewalls can prevent or limit the spread of malicious software like viruses, worms, and ransomware by blocking access to the ports that these programs use to spread.\n4. Prevent Remote Access: Firewalls can help prevent remote access attempts that are unauthorized. This is crucial in preventing attackers from gaining control over network resources.\n5. Logging and Reporting: Firewalls can provide detailed logs of network activity, which can be used for troubleshooting, identifying patterns of malicious activity, and providing evidence in the event of a cyber attack.\n6. Privacy Assurance: By denying unauthorized access, firewalls help ensure the privacy of data stored on your network.\n7. Data Flow Management: Firewalls can be configured to prioritize certain types of traffic, ensuring that the most important data gets through even during times of heavy network use.\n8. Regulatory Compliance: For many businesses, particularly in fields like healthcare, finance, and ecommerce, having a robust firewall in place is often a requirement for compliance with industry regulations and standards."
    },
    {
        term: "Firewall Access for Web Server",
        prompt: "What do you need to do to a firewall to allow access to a web server running HTTP and HTTPS?",
        description: "sudo firewall-cmd --add-service=http --permanent\nsudo firewall-cmd --add-service=https --permanent\nsudo firewall-cmd --reload"
    },
    {
        term: "rsync vs sftp",
        prompt: "Compare rsync to sftp",
        description: "1. rsync:\n  - Advantages:\n    - Efficient Synchronization: rsync excels at synchronizing files and directories by transferring only the differences between source and destination. This can be beneficial for both binary and text files, especially when dealing with large files or directories.\n    - Bandwidth Optimization: rsync's differential transfer mechanism minimizes network usage by transferring only the changed portions of files, making it efficient for both binary and text files.\n  - Use Cases:\n    - Large File Transfers: If you need to transfer large files or directories and want to optimize bandwidth usage and reduce transfer time, rsync can be a good choice.\n    - Incremental Backups: When performing incremental backups, rsync's ability to transfer only the changed parts of files makes it suitable for both binary and text files.\n2. SFTP:\n  - Advantages:\n    - Secure File Transfer: SFTP provides encryption and secure data transmission over SSH, ensuring the confidentiality and integrity of both binary and text files during transfer.\n    - Remote File Management: SFTP allows bidirectional file transfer and provides features for remote file management, making it suitable for both binary and text files.\n  - Use Cases:\n    - Secure File Transfer: If the primary concern is secure file transfer, especially over untrusted networks, SFTP is recommended for both binary and text files.\n    - Remote Access and Management: When the goal is remote access and management of files, such as renaming, deleting, or creating directories, SFTP offers comprehensive capabilities for both binary and text files."
    },
    {
        term: "Server Documentation",
        prompt: "What should you include in the documentation about your servers?",
        description: "1. Server Information:\n   - Server name: Unique name or identifier for the server.\n   - Server purpose: Description of the server's role or function.\n   - Server location: Physical or virtual location of the server.\n   - Server IP address(es): IPv4 and/or IPv6 addresses assigned to the server.\n   - Operating system: Details about the server's operating system, including version and any specific configurations.\n2. Hardware Configuration:\n   - CPU: Type, speed, and number of processors.\n   - RAM: Installed memory capacity.\n   - Storage: Type and capacity of storage devices (hard drives, SSDs, etc.).\n   - Network interfaces: Details about network interfaces, including MAC addresses and speeds.\n   - Other relevant hardware components: Include details about additional hardware, such as RAID controllers, network cards, or specialized hardware.\n3. Software and Services:\n   - Installed software packages: List the software installed on the server, including their versions.\n   - Services running on the server: Document the services running on the server, including their names, versions, and configuration details.\n   - Ports and protocols: Specify the ports and protocols used by the services running on the server.\n   - Dependencies: Identify any dependencies between different software components or services.\n4. Network Configuration:\n   - Network topology: Document the network layout and connections related to the server.\n   - IP addressing: Specify the IP addressing scheme used by the server and any associated subnets or VLANs.\n   - DNS configuration: Include information about DNS settings, such as domain names, DNS server addresses, and DNS resolver configuration.\n5. Security Information:\n   - Access controls: Document the user accounts, roles, and permissions associated with the server.\n   - Firewall rules: Include details about the firewall configuration, including allowed and blocked ports, protocols, and IP ranges.\n   - Security software: Document any security software or tools installed on the server, such as antivirus or intrusion detection systems.\n   - SSL/TLS certificates: Include information about any SSL/TLS certificates used by the server.\n6. Backup and Recovery:\n   - Backup procedures: Document the backup schedule, methods, and locations.\n   - Recovery procedures: Provide step-by-step instructions for recovering the server in the event of a failure or disaster.\n7. Contact Information:\n   - Server administrators: Include contact details for the server administrators or IT support personnel responsible for managing the server.\n   - Vendor or support contacts: Document any vendor or support contacts relevant to the server's hardware or software components."
    },
    {
        term: "Network Security Measures",
        prompt: "What kind of security should you have in place for your network in terms of both physical, electronic, and system policies?",
        description: "Physical Security:\n\n1. Restricted Access: Implement physical access controls to limit unauthorized entry to sensitive areas, such as server rooms or network infrastructure facilities. This can include measures like access cards, biometric authentication, or security personnel.\n2. Video Surveillance: Install video surveillance systems to monitor and record activities in critical areas. This helps deter unauthorized access and provides evidence in case of security incidents.\n3. Equipment Protection: Safeguard network equipment and servers by securing them in locked cabinets or racks, ensuring physical protection against theft or tampering.\n4. Environmental Controls: Maintain appropriate environmental conditions (temperature, humidity) to prevent damage to network infrastructure and equipment.\n\nElectronic Security:\n\n1. Firewalls: Implement firewalls to control incoming and outgoing network traffic, protecting against unauthorized access and potential threats.\n2. Intrusion Detection and Prevention Systems (IDPS): Deploy IDPS solutions to detect and respond to suspicious or malicious activities within the network, helping to mitigate security breaches.\n3. Secure Authentication: Enforce strong password policies, multi-factor authentication, and regular password updates to prevent unauthorized access to network resources.\n4. Network Segmentation: Divide the network into segments using VLANs or subnets, limiting the exposure of sensitive systems and reducing the potential impact of security incidents.\n\nSystem Policies:\n\n1. Patch Management: Regularly update and apply security patches to operating systems, applications, and network devices to address known vulnerabilities and reduce the risk of exploitation.\n2. User Access Controls: Implement role-based access control (RBAC) and least privilege principles to restrict user access to only what is necessary for their roles, minimizing the risk of unauthorized activities.\n3. Data Encryption: Implement encryption mechanisms, such as SSL/TLS, to protect sensitive data during transmission over the network and at rest.\n4. Security Auditing and Monitoring: Implement logging mechanisms to record and monitor system activities for identifying and investigating security incidents. Regularly review logs and employ security information and event management (SIEM) systems to detect potential threats.\n5. Security Awareness Training: Provide regular security awareness training to employees to educate them about security best practices, social engineering threats, and the importance of data protection."
    },
    {
        term: "NAT (Network Address Translation) Benefits",
        prompt: "What does NAT allow you to do for a network?",
        description: "1. IP Address Conservation: NAT conserves public IP addresses by allowing multiple devices in a private network to share a single public IP address. With NAT, organizations can use private IP addresses internally, which are not globally routable, saving valuable public IP address space.\n2. IP Masquerading: NAT hides the private IP addresses of devices on a network. The only addresses visible to the external network (like the Internet) are the public addresses that the NAT system maintains. This enhances security by effectively making the internal network invisible to external networks, which can help protect against certain types of attacks.\n3. Port Forwarding: NAT allows you to use port forwarding to direct external traffic to a specific internal device. For description, if you host a server on your local network, you can use NAT to direct all traffic on a specific port to that server. This is also known as static NAT."
    },
    {
        "term": "Resetting Forgotten Passwords",
        "prompt": "How do you get into your system, if you forgot your password (and the root password)?",
        "description": "1. Single-User Mode: Some operating systems provide a single-user mode or recovery mode that allows you to boot into a minimal environment with root privileges. In this mode, you can reset the password for your user account or the root account. The steps to access single-user mode vary depending on the operating system and boot loader used.\n2. Live CD/USB: Booting from a live CD or USB containing a Linux distribution allows you to access the file system of your installed operating system. From there, you can modify system files to reset the password or gain access to user accounts. This method requires some knowledge of the file system structure and the necessary commands.\n3. Reset with Another Administrator Account: If you have another user account with administrative privileges, you can log in with that account and reset the password for the locked user account.\n4. Password Recovery Tools: There are various third-party password recovery tools available that can help you reset the user or root password. These tools are typically bootable and can be used to reset passwords or bypass the authentication process. However, caution should be exercised when using such tools, as they can carry a risk of data loss or system instability."
    },

    {
        "term": "Dynamic Host Configuration Protocol (DHCP)",
        "prompt": "What is the purpose of DHCP?",
        "description": "1. Automatic IP Address Assignment: DHCP enables the automatic allocation of IP addresses to devices on a network. Instead of manually configuring IP addresses on each device, DHCP dynamically assigns IP addresses from a predefined range or pool. This eliminates the need for manual IP address management and reduces the chances of IP address conflicts.\n2. Centralized Configuration: DHCP allows centralized management and configuration of network parameters. In addition to IP addresses, DHCP can provide other essential network settings, such as subnet mask, default gateway, DNS server addresses, and more. By configuring these parameters centrally on a DHCP server, network administrators can ensure consistency and streamline network configuration.\n3. Efficient Resource Utilization: With DHCP, IP addresses are assigned only when they are needed, and they can be reclaimed when devices are no longer connected to the network or their lease period expires. This efficient allocation and management of IP addresses help optimize the utilization of available IP address space within a network."
    },

    {
        "term": "Address Resolution Protocol (ARP)",
        "prompt": "What is the purpose of ARP?",
        "description": "1. IP to MAC Address Mapping: Computers on a network typically communicate using IP addresses. However, when data is actually transmitted over a network, it needs to be sent to a specific MAC address. ARP is used to find the MAC address that corresponds to a given IP address, enabling proper data transmission.\n2. Enabling Efficient Communication: By resolving IP addresses to MAC addresses, ARP allows devices on a network to communicate efficiently. Without ARP, each packet sent on the network would need to be sent to every device, creating significant network congestion.\n3. Populating the ARP Cache: When a device resolves an IP address to a MAC address, it stores this information in an ARP cache. Future communications can use this cache to more quickly resolve IP addresses to MAC addresses, further improving network efficiency."
    },
    {
        "term": "Mail System Components",
        "prompt": "Compare for a mail system: User Agent, Mail Transfer Agent, Delivery Agent, Access Agent",
        "description": "User Agent (UA):\n\n- Purpose: The User Agent, also known as the Mail User Agent (MUA), is an application or software that allows users to compose, read, and manage email messages. It provides an interface for users to interact with their email accounts, organize emails into folders, and perform actions like sending, receiving, replying, and forwarding messages.\n- Functionality: The UA typically includes features like a graphical interface, message composition tools, address book integration, and management of multiple email accounts. It communicates with the Mail Transfer Agent to send outgoing messages and retrieves incoming messages from the mail server using protocols like POP3 or IMAP.\n\nMail Transfer Agent (MTA):\n\n- Purpose: The Mail Transfer Agent is responsible for routing and transferring email messages between different mail servers over a network. It facilitates the transmission of emails from the sender's mail server to the recipient's mail server.\n- Functionality: The MTA receives outgoing messages from the User Agent and performs various tasks, including DNS lookups to determine the recipient's mail server, establishing SMTP (Simple Mail Transfer Protocol) connections, and transferring the message to the appropriate destination. It also handles error reporting and queue management for undeliverable or deferred messages.\n\nDelivery Agent (DA):\n\n- Purpose: The Delivery Agent, also known as the Mail Delivery Agent (MDA), is responsible for delivering incoming email messages from the mail server to the recipient's mailbox or storage location.\n- Functionality: The DA receives incoming messages from the Mail Transfer Agent or a mail server's local queue. It processes the messages based on predefined rules or configurations, such as filtering spam or applying user-specific mail sorting. The DA places the delivered messages into the recipient's mailbox or storage location, making them accessible for retrieval by the User Agent.\n\nAccess Agent (AA):\n\n- Purpose: The Access Agent, also referred to as the Mail Access Agent or Mail Retrieval Agent, provides access to email messages stored on the mail server for retrieval by the User Agent.\n- Functionality: The AA handles incoming requests from the User Agent to retrieve messages from the server. It communicates with the server using protocols like POP3 (Post Office Protocol) or IMAP (Internet Message Access Protocol) to authenticate the user, retrieve the requested messages, and provide them to the User Agent for display or further processing. The AA may also handle tasks like message flagging, marking messages as read, or managing server-side folders."
    },
    {
        "term": "Mail Forwarding",
        "prompt": "What is the purpose of a mail forward?",
        "description": "Mail forwarding is an optional service that is used to redirect your mail when you move. Contrary to popular belief, mail forwarding does not actually change your address; it simply redirects mail. If you forgot to tell someone or missed a service provider when changing your address, your mail will be forwarded to the right address by USPS. The mail forwarding service is like a safety net, but is not a magical way to change your address!"
    },
    {
        "term": "File Access Control",
        "prompt": "What prevents one user from reading another user's files?",
        "description": "1. User and Group Permissions: File permissions are set to control access at the user and group levels. Permissions specify who can read (read permission), modify (write permission), or execute (execute permission) files. By default, files are typically owned by the user who created them and are only accessible to that user.\n2. Filesystem Permissions: The filesystem itself may have its own permissions that determine which users or groups can access certain directories or files. The filesystem permissions work in conjunction with user and group permissions to enforce access control.\n3. Encryption and Secure File Systems: Encryption techniques can be applied to sensitive files or entire file systems to protect their contents. Encryption ensures that even if unauthorized access is gained to the files, the data remains unreadable without the encryption key."
    },
    {
        "term": "LVM",
        "prompt": "Why use LVM for your disk management?",
        "description": "1. Dynamic Disk Resizing: LVM allows for dynamic resizing of disk partitions, which can be extremely helpful. You can easily increase or decrease the size of logical volumes while they are in use, without any downtime.\n2. Improved Disk Utilization: With LVM, you can pool together storage from multiple disks, allowing you to utilize storage more efficiently by creating volumes that span multiple disks.\n3. Snapshots: LVM supports creating snapshots, which are read-only or read-write copies of a logical volume at a particular point in time. These can be useful for backup purposes, or for testing changes without affecting the original volume.\n4. Easier Storage Upgrade or Replacement: When you need to upgrade or replace a disk, LVM makes it easy to migrate data from one disk to another. You can move data while the original storage remains online and accessible.\n5. Data Striping: LVM can stripe data across multiple physical volumes in a way similar to RAID 0, potentially improving performance for certain types of workloads.\n6. Mirroring: LVM supports mirroring, which can increase data availability similarly to RAID 1.\n7. Encryption: LVM volumes can be encrypted to enhance data security, with the Linux Unified Key Setup (LUKS) often used for this purpose."
    },
    {
        "term": "IMAP, POP3, SMTP",
        "prompt": "Compare IMAP, POP3, SMTP",
        "description": "1. IMAP (Internet Message Access Protocol):\n  - IMAP is used for receiving emails.\n  - IMAP maintains emails on a mail server and allows an email client to view and manipulate the emails as though they were stored locally on the client's device.\n  - Multiple clients can connect to the same mailbox at the same time.\n  - It supports multiple folders and synchronization between the client and server. This makes it ideal for users who access their email on multiple devices.\n  - Generally, IMAP uses port 143, or port 993 for SSL/TLS encrypted connections.\n\n2. POP3 (Post Office Protocol version 3):\n  - POP3 is also used for receiving emails.\n  - In contrast to IMAP, POP3 is designed to support \"download and delete\" scenarios. It typically downloads all new messages to the client device and then deletes them from the server. However, most clients can be configured to leave a copy of the messages on the server.\n  - It's best suited for users who only access their email from one device.\n  - POP3 does not support multiple folders; it presents all messages in one inbox.\n  - Generally, POP3 uses port 110, or port 995 for SSL/TLS encrypted connections.\n\n3. SMTP (Simple Mail Transfer Protocol):\n  - SMTP is used for sending emails.\n  - It works with a Mail Transfer Agent (MTA) to route your email to the correct server for delivery.\n  - SMTP servers communicate with one another to transfer emails from one domain to another.\n  - Generally, SMTP uses port 25. However, many ISPs block port 25 to prevent spam, so port 587 is often used for email submission from email clients, and port 465 is used for SMTP over SSL."
    }

]